complete -c clarinet -n "__fish_use_subcommand" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c clarinet -n "__fish_use_subcommand" -s V -l version -d 'Print version'
complete -c clarinet -n "__fish_use_subcommand" -f -a "completions" -d 'Generate shell completions scripts'
complete -c clarinet -n "__fish_use_subcommand" -f -a "new" -d 'Create and scaffold a new project'
complete -c clarinet -n "__fish_use_subcommand" -f -a "contracts" -d 'Subcommands for working with contracts'
complete -c clarinet -n "__fish_use_subcommand" -f -a "requirements" -d 'Interact with contracts deployed on Mainnet'
complete -c clarinet -n "__fish_use_subcommand" -f -a "chainhooks" -d 'Subcommands for working with chainhooks (deprecated)'
complete -c clarinet -n "__fish_use_subcommand" -f -a "deployments" -d 'Manage contracts deployments on Simnet/Devnet/Testnet/Mainnet'
complete -c clarinet -n "__fish_use_subcommand" -f -a "console" -d 'Load contracts in a REPL for an interactive session'
complete -c clarinet -n "__fish_use_subcommand" -f -a "check" -d 'Check contracts syntax'
complete -c clarinet -n "__fish_use_subcommand" -f -a "integrate" -d 'Start a local Devnet network for interacting with your contracts from your browser'
complete -c clarinet -n "__fish_use_subcommand" -f -a "devnet" -d 'Subcommands for Devnet usage'
complete -c clarinet -n "__fish_use_subcommand" -f -a "lsp" -d 'Get Clarity autocompletion and inline errors from your code editor (VSCode, vim, emacs, etc)'
complete -c clarinet -n "__fish_use_subcommand" -f -a "dap" -d 'Step by step debugging and breakpoints from your code editor (VSCode, vim, emacs, etc)'
complete -c clarinet -n "__fish_use_subcommand" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from completions" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from new" -l disable-telemetry -d 'Do not provide developer usage telemetry for this project'
complete -c clarinet -n "__fish_seen_subcommand_from new" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -f -a "new" -d 'Generate files and settings for a new contract'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -f -a "rm" -d 'Remove files and settings for a contract'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from new" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from new" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from rm" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from rm" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -f -a "new" -d 'Generate files and settings for a new contract'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -f -a "rm" -d 'Remove files and settings for a contract'
complete -c clarinet -n "__fish_seen_subcommand_from contracts; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from add; and not __fish_seen_subcommand_from help" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from add; and not __fish_seen_subcommand_from help" -f -a "add" -d 'Interact with contracts published on Mainnet'
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from add; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and __fish_seen_subcommand_from add" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and __fish_seen_subcommand_from add" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from add; and not __fish_seen_subcommand_from help" -f -a "add" -d 'Interact with contracts published on Mainnet'
complete -c clarinet -n "__fish_seen_subcommand_from requirements; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from add; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from chainhooks" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "check" -d 'Check deployments format'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "generate" -d 'Generate new deployment'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "apply" -d 'Apply deployment'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from check" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from check" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l simnet -d 'Generate a deployment file for simnet environments (console, tests)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l devnet -d 'Generate a deployment file for devnet, using settings/Devnet.toml'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l testnet -d 'Generate a deployment file for devnet, using settings/Testnet.toml'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l mainnet -d 'Generate a deployment file for devnet, using settings/Mainnet.toml'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l no-batch -d 'Generate a deployment file without trying to batch transactions (simnet only)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l low-cost -d 'Compute and set cost, using low priority (network connection required)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l medium-cost -d 'Compute and set cost, using medium priority (network connection required)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l high-cost -d 'Compute and set cost, using high priority (network connection required)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -l manual-cost -d 'Leave cost estimation manual'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from generate" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -s p -l deployment-plan-path -d 'Apply deployment plan specified' -r
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -l devnet -d 'Apply default deployment settings/default.devnet-plan.toml'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -l testnet -d 'Apply default deployment settings/default.testnet-plan.toml'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -l mainnet -d 'Apply default deployment settings/default.mainnet-plan.toml'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -l no-dashboard -d 'Display streams of logs instead of terminal UI dashboard'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -s d -l use-on-disk-deployment-plan -d 'Use on disk deployment plan (prevent updates computing)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -s c -l use-computed-deployment-plan -d 'Use computed deployment plan (will overwrite on disk version if any update)'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from apply" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "check" -d 'Check deployments format'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "generate" -d 'Generate new deployment'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "apply" -d 'Apply deployment'
complete -c clarinet -n "__fish_seen_subcommand_from deployments; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from console" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from console" -s p -l deployment-plan-path -d 'If specified, use this deployment file' -r
complete -c clarinet -n "__fish_seen_subcommand_from console" -s d -l use-on-disk-deployment-plan -d 'Use on disk deployment plan (prevent updates computing)'
complete -c clarinet -n "__fish_seen_subcommand_from console" -s c -l use-computed-deployment-plan -d 'Use computed deployment plan (will overwrite on disk version if any update)'
complete -c clarinet -n "__fish_seen_subcommand_from console" -l enable-clarity-wasm -d 'Allow the Clarity Wasm preview to run in parallel with the Clarity interpreter (beta)'
complete -c clarinet -n "__fish_seen_subcommand_from console" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from check" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from check" -s p -l deployment-plan-path -d 'If specified, use this deployment file' -r
complete -c clarinet -n "__fish_seen_subcommand_from check" -s d -l use-on-disk-deployment-plan -d 'Use on disk deployment plan (prevent updates computing)'
complete -c clarinet -n "__fish_seen_subcommand_from check" -s c -l use-computed-deployment-plan -d 'Use computed deployment plan (will overwrite on disk version if any update)'
complete -c clarinet -n "__fish_seen_subcommand_from check" -l enable-clarity-wasm -d 'Allow the Clarity Wasm preview to run in parallel with the Clarity interpreter (beta)'
complete -c clarinet -n "__fish_seen_subcommand_from check" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -s p -l deployment-plan-path -d 'If specified, use this deployment file' -r
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -l package -d 'Path to Package.json produced by \'clarinet devnet package\'' -r
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -l no-dashboard -d 'Display streams of logs instead of terminal UI dashboard'
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -s d -l use-on-disk-deployment-plan -d 'Use on disk deployment plan (prevent updates computing)'
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -s c -l use-computed-deployment-plan -d 'Use computed deployment plan (will overwrite on disk version if any update)'
complete -c clarinet -n "__fish_seen_subcommand_from integrate" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -f -a "package" -d 'Generate package of all required devnet artifacts'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -f -a "start" -d 'Start a local Devnet network for interacting with your contracts from your browser'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from package" -s n -l name -d 'Output json file name' -r
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from package" -s m -l manifest-path -r
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from package" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -s m -l manifest-path -d 'Path to Clarinet.toml' -r
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -s p -l deployment-plan-path -d 'If specified, use this deployment file' -r
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -l package -d 'Path to Package.json produced by \'clarinet devnet package\'' -r
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -l no-dashboard -d 'Display streams of logs instead of terminal UI dashboard'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -s d -l use-on-disk-deployment-plan -d 'Use on disk deployment plan (prevent updates computing)'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -s c -l use-computed-deployment-plan -d 'Use computed deployment plan (will overwrite on disk version if any update)'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from start" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -f -a "package" -d 'Generate package of all required devnet artifacts'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -f -a "start" -d 'Start a local Devnet network for interacting with your contracts from your browser'
complete -c clarinet -n "__fish_seen_subcommand_from devnet; and __fish_seen_subcommand_from help; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from lsp" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from dap" -s h -l help -d 'Print help'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "completions" -d 'Generate shell completions scripts'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "new" -d 'Create and scaffold a new project'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "contracts" -d 'Subcommands for working with contracts'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "requirements" -d 'Interact with contracts deployed on Mainnet'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "chainhooks" -d 'Subcommands for working with chainhooks (deprecated)'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "deployments" -d 'Manage contracts deployments on Simnet/Devnet/Testnet/Mainnet'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "console" -d 'Load contracts in a REPL for an interactive session'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "check" -d 'Check contracts syntax'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "integrate" -d 'Start a local Devnet network for interacting with your contracts from your browser'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "devnet" -d 'Subcommands for Devnet usage'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "lsp" -d 'Get Clarity autocompletion and inline errors from your code editor (VSCode, vim, emacs, etc)'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "dap" -d 'Step by step debugging and breakpoints from your code editor (VSCode, vim, emacs, etc)'
complete -c clarinet -n "__fish_seen_subcommand_from help; and not __fish_seen_subcommand_from completions; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from chainhooks; and not __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from console; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from integrate; and not __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from lsp; and not __fish_seen_subcommand_from dap; and not __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm" -f -a "new" -d 'Generate files and settings for a new contract'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from contracts; and not __fish_seen_subcommand_from new; and not __fish_seen_subcommand_from rm" -f -a "rm" -d 'Remove files and settings for a contract'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from requirements; and not __fish_seen_subcommand_from add" -f -a "add" -d 'Interact with contracts published on Mainnet'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply" -f -a "check" -d 'Check deployments format'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply" -f -a "generate" -d 'Generate new deployment'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from deployments; and not __fish_seen_subcommand_from check; and not __fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from apply" -f -a "apply" -d 'Apply deployment'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start" -f -a "package" -d 'Generate package of all required devnet artifacts'
complete -c clarinet -n "__fish_seen_subcommand_from help; and __fish_seen_subcommand_from devnet; and not __fish_seen_subcommand_from package; and not __fish_seen_subcommand_from start" -f -a "start" -d 'Start a local Devnet network for interacting with your contracts from your browser'
